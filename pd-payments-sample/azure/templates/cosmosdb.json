{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"name": {
			"type": "string"
		},
		"dbName": {
			"type": "string"
		},
		"containerName": {
			"type": "string"
		},
		"location": {
			"type": "string"
		},
		"locationName": {
			"type": "string"
		},
		"vNetResourceGroupWest": {
			"type": "string"
		},
		"vNetResourceGroupEast": {
			"type": "string"
		},
		"vnetWest": {
			"type": "string"
		},
		"appBlueSubnet": {
			"type": "string"
		},
		"appGreenSubnet": {
			"type": "string"
		},
		"defaultExperience": {
			"type": "string"
		},
		"isZoneRedundant": {
			"type": "string"
		},
		"pairedLocation": {
			"type": "string"
		},
		"pairedLocationName": {
			"type": "string"
		},
		"partitionKeyPath": {
			"type": "string"
		},
		"ipRulesList": {
			"type": "array"
		},
		"autoscaleMaxThroughput": {
			"type": "int",
			"defaultValue": 8000,
			"maxValue": 1000000,
			"minValue": 8000,
			"metadata": {
				"description": "Maximum throughput for the container"
			}
		}
	},
	"variables": {
		"westVirtualNetworkSubnetId": "[resourceId(parameters('vNetResourceGroupWest') ,'Microsoft.Network/virtualNetworks/subnets',parameters('vnetWest'),parameters('appBlueSubnet'))]",
		"eastVirtualNetworkSubnetId": "[resourceId(parameters('vNetResourceGroupWest') ,'Microsoft.Network/virtualNetworks/subnets',parameters('vnetWest'),parameters('appGreenSubnet'))]"
	},
	"resources": [
		{
			"apiVersion": "2024-05-15-preview",
			"kind": "GlobalDocumentDB",
			"type": "Microsoft.DocumentDb/databaseAccounts",
			"name": "[parameters('name')]",
			"location": "[parameters('location')]",
			"properties": {
				"databaseAccountOfferType": "Standard",
				"locations": [
					{
						"id": "[concat(parameters('name'), '-', parameters('location'))]",
						"failoverPriority": 0,
						"locationName": "[parameters('locationName')]"
					},
					{
						"id": "[concat(parameters('name'), '-', parameters('pairedLocation'))]",
						"failoverPriority": 1,
						"locationName": "[parameters('pairedLocationName')]"
					}
				],
				"backupPolicy": {
					"type": "Periodic",
					"periodicModeProperties": {
						"backupIntervalInMinutes": 240,
						"backupRetentionIntervalInHours": 8,
						"backupStorageRedundancy": "Geo"
					}
				},
				"isVirtualNetworkFilterEnabled": true,
				"virtualNetworkRules": [
					{
						"id": "[variables('westVirtualNetworkSubnetId')]"
					},
					{
						"id": "[variables('eastVirtualNetworkSubnetId')]"
					}
				],
				"ipRules": "[parameters('ipRulesList')]",
				"dependsOn": [],
				"minimalTlsVersion": "Tls12",
				"enableMultipleWriteLocations": false,
				"capabilities": [],
				"capacityMode": "Provisioned",
				"enableFreeTier": false
			},
			"tags": {
				"defaultExperience": "[parameters('defaultExperience')]",
				"hidden-cosmos-mmspecial": ""
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
			"apiVersion": "2024-05-15-preview",
			"name": "[concat(parameters('name'), '/', parameters('dbName'))]",
			"dependsOn": [
				"[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name'))]"
			],
			"properties": {
				"resource": {
					"id": "[parameters('dbName')]"
				}
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
			"apiVersion": "2024-02-15-preview",
			"name": "[concat(parameters('name'), '/00000000-0000-0000-0000-000000000001')]",
			"dependsOn": [
				"[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name'))]"
			],
			"properties": {
				"roleName": "Cosmos DB Built-in Data Reader",
				"type": "BuiltInRole",
				"assignableScopes": [
					"[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name'))]"
				],
				"permissions": [
					{
						"dataActions": [
							"Microsoft.DocumentDB/databaseAccounts/readMetadata",
							"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
							"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
							"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
						],
						"notDataActions": []
					}
				]
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
			"apiVersion": "2024-05-15-preview",
			"name": "[concat(parameters('name'), '/00000000-0000-0000-0000-000000000002')]",
			"dependsOn": [
				"[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name'))]"
			],
			"properties": {
				"roleName": "Cosmos DB Built-in Data Contributor",
				"type": "BuiltInRole",
				"assignableScopes": [
					"[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name'))]"
				],
				"permissions": [
					{
						"dataActions": [
							"Microsoft.DocumentDB/databaseAccounts/readMetadata",
							"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
							"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
						],
						"notDataActions": []
					}
				]
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
			"apiVersion": "2024-05-15-preview",
			"name": "[concat(parameters('name'), '/', parameters('dbName'), '/', parameters('containerName'))]",
			"dependsOn": [
				"[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('name'), parameters('dbName'))]",
				"[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name'))]"
			],
			"properties": {
				"resource": {
					"id": "[parameters('containerName')]",
					"indexingPolicy": {
						"indexingMode": "consistent",
						"automatic": true,
						"includedPaths": [
							{
								"path": "/*"
							}
						],
						"excludedPaths": [
							{
								"path": "/\"_etag\"/?"
							}
						]
					},
					"partitionKey": {
						"paths": [
							"[parameters('partitionKeyPath')]"
						],
						"kind": "Hash",
						"version": 2
					},
					"uniqueKeyPolicy": {
						"uniqueKeys": []
					},
					"conflictResolutionPolicy": {
						"mode": "LastWriterWins",
						"conflictResolutionPath": "/_ts"
					},
					"computedProperties": []
				},
				"options": {
					"autoscaleSettings": {
						"maxThroughput": "[parameters('autoscaleMaxThroughput')]"
					}
				}
			}
		}
	]
}