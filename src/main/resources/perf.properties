perf.env=dev

# -----------------------------------------------------------------------------
# common/jmeter
# -----------------------------------------------------------------------------
jmeter.jtlWriter.enabled=true
jmeter.jtlWriter.path=target/jtls

jmeter.htmlReport.enabled=true
jmeter.htmlReport.path=target/html

jmeter.showViz=true
jmeter.showGui=false

test.useApigee=false


# -----------------------------------------------------------------------------
# azure load testing
# -----------------------------------------------------------------------------
jmeter.runOnAzure=false
azure.engine=1
azure.timeOutSeconds=1200
azure.splitCsvsBetweenEngines=false
azure.location=westus
azure.monitoredResources=\
  /subscriptions/3429a2df-1acc-4e8a-858b-58d3d612a7b0/resourceGroups/cigdataapi-uw-rg-d/providers/Microsoft.Web/serverFarms/cdpapi-uw-asp-dev,\
  /subscriptions/3429a2df-1acc-4e8a-858b-58d3d612a7b0/resourceGroups/cigdataapi-uw-rg-d/providers/Microsoft.DocumentDB/databaseAccounts/cdpoverride-uw-db-d,\
  /subscriptions/3429a2df-1acc-4e8a-858b-58d3d612a7b0/resourceGroups/cigdataapi-uw-rg-d/providers/Microsoft.Web/sites/cdpapi-uw-fa-d,\
  /subscriptions/3429a2df-1acc-4e8a-858b-58d3d612a7b0/resourceGroups/cigdata-uw-rg-d/providers/Microsoft.DocumentDB/databaseAccounts/cigdata-uw-sqlinst-q,\
  /subscriptions/3429a2df-1acc-4e8a-858b-58d3d612a7b0/resourceGroups/cigdataapi-uw-rg-d/providers/Microsoft.KeyVault/vaults/cigdataapi-uw-kv-d


# -----------------------------------------------------------------------------
# generator
# -----------------------------------------------------------------------------
generator.cosmos.survivorship.endpoint=https://cigdata-uw-sqlinst-q.documents.azure.com:443/
generator.cosmos.survivorship.key=ref:ENV_COSMOS_SURVIVORSHIP_KEY_QA
generator.cosmos.survivorship.outputBase=src/main/resources

generator.cosmos.override.endpoint=https://cdpoverride-uw-db-q.documents.azure.com:443/
generator.cosmos.override.key=ref:ENV_COSMOS_OVERRIDE_KEY_QA
generator.cosmos.override.outputBase=src/main/resources

# -----------------------------------------------------------------------------
# health checks
# -----------------------------------------------------------------------------
healthChecks.threads=5
healthChecks.iterations=50


# -----------------------------------------------------------------------------
# customer search API
# -----------------------------------------------------------------------------
customerSearchViaGuestId.threads=10
customerSearchViaGuestId.iterations=100
customerSearchViaGuestId.rampUpSec=10
customerSearchViaGuestId.testData=customerSearch/guestIds.csv
customerSearchViaGuestId.clientId=customer_data_product_services
customerSearchViaGuestId.clientSecret=ref:CUSTOMER_DATA_PRODUCT_SERVICES_SECRET
customerSearchViaGuestId.generator.db=cdp-survivorship-outbound.customer_profile_customer
customerSearchViaGuestId.generator.headers=guestId,amperityId,expects,mLifeId,mgmRewardsTierCurrent,numberOfAccounts
customerSearchViaGuestId.generator.query=\
  SELECT \
    c.guest_id AS guestId, \
    c.amperity_id AS amperityId, \
    1 AS expects, \
    c.MLifeID AS mLifeId, \
    IS_NULL(c.MLifeTierCurrent) ? 'null' : c.MLifeTierCurrent AS mgmRewardsTierCurrent, \
    c.distinct_accounts AS numberOfAccounts \
  FROM c \
  WHERE c.MLifeID != null and c.Marketable_Name_Flag = 'Y' \
  OFFSET {offset} LIMIT 10000

customerSearchViaMLifeId.threads=10
customerSearchViaMLifeId.iterations=100
customerSearchViaMLifeId.rampUpSec=10
customerSearchViaMLifeId.testData=customerSearch/guestIds.csv
customerSearchViaMLifeId.clientId=customer_data_product_services
customerSearchViaMLifeId.clientSecret=ref:CUSTOMER_DATA_PRODUCT_SERVICES_SECRET

customerSearchViaAmperityId.threads=10
customerSearchViaAmperityId.iterations=100
customerSearchViaAmperityId.rampUpSec=10
customerSearchViaAmperityId.testData=customerSearch/guestIds.csv
customerSearchViaAmperityId.clientId=customer_data_product_services
customerSearchViaAmperityId.clientSecret=ref:CUSTOMER_DATA_PRODUCT_SERVICES_SECRET

customerSearchViaUnsurvivedPhoneZeroResults.threads=10
customerSearchViaUnsurvivedPhoneZeroResults.iterations=100
customerSearchViaUnsurvivedPhoneZeroResults.rampUpSec=10
customerSearchViaUnsurvivedPhoneZeroResults.clientId=vendor_avaya
customerSearchViaUnsurvivedPhoneZeroResults.clientSecret=ref:AVAYA_SECRET
customerSearchViaUnsurvivedPhoneZeroResults.testData=customerSearch/phoneNumbersZeroResults.csv

customerSearchViaUnsurvivedPhoneSingleResults.threads=10
customerSearchViaUnsurvivedPhoneSingleResults.iterations=100
customerSearchViaUnsurvivedPhoneSingleResults.rampUpSec=10
customerSearchViaUnsurvivedPhoneSingleResults.clientId=vendor_avaya
customerSearchViaUnsurvivedPhoneSingleResults.clientSecret=ref:AVAYA_SECRET
customerSearchViaUnsurvivedPhoneSingleResults.testData=customerSearch/phoneNumbersSingleResult.csv

customerSearchViaUnsurvivedPhoneMultiResults.threads=10
customerSearchViaUnsurvivedPhoneMultiResults.iterations=100
customerSearchViaUnsurvivedPhoneMultiResults.rampUpSec=10
customerSearchViaUnsurvivedPhoneMultiResults.clientId=vendor_avaya
customerSearchViaUnsurvivedPhoneMultiResults.clientSecret=ref:AVAYA_SECRET
customerSearchViaUnsurvivedPhoneMultiResults.testData=customerSearch/phoneNumbersMultiResults.csv

customerSearchViaUnsurvivedPhone.generator.db=cdp-survivorship-outbound.account_info_xref
customerSearchViaUnsurvivedPhone.generator.headers=phoneNumber
customerSearchViaUnsurvivedPhone.multiResult.generator.query=\
  SELECT \
    c.phone AS phoneNumber \
  FROM c \
  WHERE c.phone != null and ARRAY_LENGTH(c.xref) > 5 and LENGTH(c.phone) = 10 \
  OFFSET {offset} LIMIT 10000

customerSearchViaUnsurvivedPhone.singleResult.generator.query=\
  SELECT \
    c.phone AS phoneNumber \
  FROM c \
  WHERE c.phone != null and ARRAY_LENGTH(c.xref) < 2 and LENGTH(c.phone) = 10 \
  OFFSET {offset} LIMIT 10000

customerSearchViaAccount.threads=10
customerSearchViaAccount.iterations=100
customerSearchViaAccount.rampUpSec=10
customerSearchViaAccount.testData=customerSearch/accountAndGuestIds.csv
customerSearchViaAccount.clientId=customer_data_product_services
customerSearchViaAccount.clientSecret=ref:CUSTOMER_DATA_PRODUCT_SERVICES_SECRET
customerSearchViaAccount.generator.db=cdp-survivorship-outbound.account_info_xref
customerSearchViaAccount.generator.headers=accountType,accountId,guestId,amperityId,mLifeId,mgmRewardsTierCurrent,expects,numberOfAccounts
customerSearchViaAccount.generator.query=\
  SELECT \
    c.guest_id AS guestId, \
    ARRAY(SELECT t.src_sys_id AS sourceId, t.account_id AS account FROM t in c.xref) AS sources \
  FROM account_info_xref c \
  WHERE c.xref != null AND NOT IS_NULL(c.first_name) AND NOT IS_NULL(c.last_name) AND ARRAY_LENGTH(c.xref) < 3000 \
  OFFSET {offset} LIMIT 10000
customerSearchViaAccount.generator.collection2=customer_profile_customer
customerSearchViaAccount.generator.query2=\
  SELECT \
    c.guest_id AS guestId, \
    c.amperity_id AS amperityId, \
    1 AS expects, \
    c.MLifeID AS mLifeId, \
    IS_NULL(c.MLifeTierCurrent) ? 'null' : c.MLifeTierCurrent AS mgmRewardsTierCurrent, \
    c.distinct_accounts AS numberOfAccounts \
  FROM c \
  WHERE c.guest_id = {guestId}

# -----------------------------------------------------------------------------
# customer insights API
# -----------------------------------------------------------------------------
customerInsightsViaGuestId.threads=10
customerInsightsViaGuestId.iterations=100
customerInsightsViaGuestId.rampUpSec=10
customerInsightsViaGuestId.initialDelayMs=3000
customerInsightsViaGuestId.postIterationMaxDelayMs=500
customerInsightsViaGuestId.testData=customerInsights/guestIds.csv
customerInsightsViaGuestId.clientId=mgm_cyber_defense
customerInsightsViaGuestId.clientSecret=ref:CYBER_DEFENSE_SECRET
customerInsightsViaGuestId.generator.db=cdp-survivorship-outbound.customer_profile_customer
customerInsightsViaGuestId.generator.headers=guestId,expects,mLifeId,mgmRewardsTierCurrent,numberOfAccounts,\
  stateCd,marketableNameFlag,marketableAddressFlag,isValidEmail,isValidMail,goo,betMGMEnrollment
customerInsightsViaGuestId.generator.query=\
  SELECT \
    c.guest_id AS guestId, \
    1 AS expects, \
    c.MLifeID AS mLifeId, \
    IS_NULL(c.MLifeTierCurrent) ? 'null' : c.MLifeTierCurrent AS mgmRewardsTierCurrent, \
    c.distinct_accounts + 2 AS numberOfAccounts, \
    IS_NULL(c.state_province_cd) ? 'null' : c.state_province_cd AS stateCd \
  FROM c \
  WHERE c.MLifeID != null and c.Marketable_Name_Flag = 'Y' and c.MLifeTierCurrent != null \
  OFFSET {offset} LIMIT 10000
customerInsightsViaGuestId.generator.collection2=marketability_global_customer
customerInsightsViaGuestId.generator.query2=\
  SELECT \
    CONTAINS((IS_NULL(c.Marketable_Name_Flag_Overridden) ? c.Marketable_Name_Flag : c.Marketable_Name_Flag_Overridden), 'Y') AS marketableNameFlag, \
    CONTAINS((IS_NULL(c.Marketable_Address_Flag_Overridden) ? c.Marketable_Address_Flag : c.Marketable_Address_Flag_Overridden), 'Y') AS marketableAddressFlag, \
    CONTAINS((IS_NULL(c.IsValidEmail_Overridden) ? c.IsValidEmail : c.IsValidEmail_Overridden), 'Y') AS isValidEmail, \
    CONTAINS(c.IsValidMail, 'Y') AS isValidMail, \
    CONTAINS(c.GOO, 'Y') AS goo, \
    CONTAINS(c.BetMGMEnrollment, 'Y') AS betMGMEnrollment \
  FROM c \
  WHERE c.guest_id = {guestId}

customerInsightsViaMLifeId.threads=10
customerInsightsViaMLifeId.iterations=100
customerInsightsViaMLifeId.rampUpSec=10
customerInsightsViaMLifeId.initialDelayMs=5000
customerInsightsViaMLifeId.postIterationMaxDelayMs=500
customerInsightsViaMLifeId.testData=customerInsights/guestIds.csv
customerInsightsViaMLifeId.clientId=mgm_cyber_defense
customerInsightsViaMLifeId.clientSecret=ref:CYBER_DEFENSE_SECRET

customerInsightsViaAccount.threads=10
customerInsightsViaAccount.iterations=100
customerInsightsViaAccount.rampUpSec=10
customerInsightsViaAccount.initialDelayMs=1000
customerInsightsViaAccount.postIterationMaxDelayMs=250
customerInsightsViaAccount.testData=customerInsights/accountAndGuestIds.csv
customerInsightsViaAccount.clientId=mgm_cyber_defense
customerInsightsViaAccount.clientSecret=ref:CYBER_DEFENSE_SECRET
customerInsightsViaAccount.generator.db=cdp-survivorship-outbound.account_info_xref
customerInsightsViaAccount.generator.headers=accountType,accountId,guestId,mLifeId,mgmRewardsTierCurrent,stateCd
customerInsightsViaAccount.generator.query=\
  SELECT \
    c.guest_id AS guestId, \
    ARRAY(SELECT t.src_sys_id AS sourceId, t.account_id AS account FROM t in c.xref) AS sources \
  FROM account_info_xref c \
  WHERE c.xref != null AND NOT IS_NULL(c.first_name) AND NOT IS_NULL(c.last_name) AND ARRAY_LENGTH(c.xref) < 3000 \
  OFFSET {offset} LIMIT 10000
customerInsightsViaAccount.generator.collection2=customer_profile_customer
customerInsightsViaAccount.generator.query2=\
  SELECT \
    c.guest_id AS guestId, \
    c.MLifeID AS mLifeId, \
    IS_NULL(c.MLifeTierCurrent) ? 'null' : c.MLifeTierCurrent AS mgmRewardsTierCurrent, \
    IS_NULL(c.state_province_cd) ? 'null' : c.state_province_cd AS stateCd \
  FROM customer_profile_customer c \
  WHERE c.guest_id = {guestId} AND c.MLifeID != null and c.Marketable_Name_Flag = 'Y' and c.MLifeTierCurrent != null

# -----------------------------------------------------------------------------
# override search API
# -----------------------------------------------------------------------------
overrideSearchViaGuestId.threads=10
overrideSearchViaGuestId.iterations=100
overrideSearchViaGuestId.testData=overrideSearch/overrideGuestIds.csv
overrideSearchViaGuestId.clientId=customer_data_product_services
overrideSearchViaGuestId.clientSecret=ref:CUSTOMER_DATA_PRODUCT_SERVICES_SECRET
overrideSearchViaGuestId.generator.db=cdpoverride.request_info
overrideSearchViaGuestId.generator.headers=ticketNumber,changeRequestType,changeField,created,lastUpdated,status,customerId,guestName,userId,requestorName
overrideSearchViaGuestId.generator.query=\
  SELECT \
      c.ticketNumber AS ticketNumber, \
      c.changeRequestType AS changeRequestType, \
      c.changeField AS changeField,\
      c.created AS created, \
      c.lastUpdated as lastUpdated, \
      c.status AS status, \
      c.customerId AS customerId, \
      c.guestName AS guestName, \
      c.userId as userId, \
      c.requestorName AS requestorName \
  FROM request_info c \
  ORDER BY c.ticketNumber

overrideSearchViaRequestorId.threads=10
overrideSearchViaRequestorId.iterations=100
overrideSearchViaRequestorId.testData=overrideSearch/overrideGuestIds.csv
overrideSearchViaRequestorId.clientId=customer_data_product_services
overrideSearchViaRequestorId.clientSecret=ref:CUSTOMER_DATA_PRODUCT_SERVICES_SECRET

overrideSearchViaStatus.threads=10
overrideSearchViaStatus.iterations=100
overrideSearchViaStatus.testData=overrideSearch/overrideGuestIds.csv
overrideSearchViaStatus.clientId=customer_data_product_services
overrideSearchViaStatus.clientSecret=ref:CUSTOMER_DATA_PRODUCT_SERVICES_SECRET

overrideSearchViaCategory.threads=10
overrideSearchViaCategory.iterations=100
overrideSearchViaCategory.testData=overrideSearch/overrideGuestIds.csv
overrideSearchViaCategory.clientId=customer_data_product_services
overrideSearchViaCategory.clientSecret=ref:CUSTOMER_DATA_PRODUCT_SERVICES_SECRET

overrideSearchViaGuestIdAndStatus.threads=10
overrideSearchViaGuestIdAndStatus.iterations=100
overrideSearchViaGuestIdAndStatus.testData=overrideSearch/overrideGuestIds.csv
overrideSearchViaGuestIdAndStatus.clientId=customer_data_product_services
overrideSearchViaGuestIdAndStatus.clientSecret=ref:CUSTOMER_DATA_PRODUCT_SERVICES_SECRET

overrideSearchViaMultipleInputs.threads=10
overrideSearchViaMultipleInputs.iterations=100
overrideSearchViaMultipleInputs.testData=overrideSearch/overrideGuestIds.csv
overrideSearchViaMultipleInputs.clientId=customer_data_product_services
overrideSearchViaMultipleInputs.clientSecret=ref:CUSTOMER_DATA_PRODUCT_SERVICES_SECRET

overrideStatusViaGuestId.threads=10
overrideStatusViaGuestId.iterations=50
overrideStatusViaGuestId.rampUpSec=10
overrideStatusViaGuestId.testData=overrideStatus/overrideStatus.csv
overrideStatusViaGuestId.clientId=customer_data_product_services
overrideStatusViaGuestId.clientSecret=ref:CUSTOMER_DATA_PRODUCT_SERVICES_SECRET
overrideStatusViaGuestId.generator.db=cdpoverride.pii_override
overrideStatusViaGuestId.generator.headers=guestId,piiEntity,piiStatus,marketabilityEntity,marketabilityStatus
overrideStatusViaGuestId.generator.query=\
  SELECT \
    c.guest_id as "guestId", \
    c.override_group as "piiEntity", \
    'Active' as "piiStatus" \
  FROM pii_override c \
  WHERE c.isActive = true \
  ORDER BY c.guest_id
overrideStatusViaGuestId.generator.collection2=marketability_override
overrideStatusViaGuestId.generator.query2=\
  SELECT \
    c.guest_id as "guestId", \
    c.override_value.flag as "marketabilityEntity", \
    'Active' as "marketabilityStatus" \
  FROM marketability_override c \
  WHERE c.isActive = true and c.override_value.flag != 'badFlag' and c.guest_id = {guestId}
overrideStatusViaGuestId.generator.db3=cdp-survivorship-outbound.customer_profile_customer
overrideStatusViaGuestId.generator.query3=\
  SELECT count(1) as "count" FROM customer_profile_customer c WHERE c.guest_id = {guestId}

overrideDetail.threads=10
overrideDetail.iterations=100
overrideDetail.rampUpSec=10
overrideDetail.clientId=customer_data_product_services
overrideDetail.clientSecret=ref:CUSTOMER_DATA_PRODUCT_SERVICES_SECRET
overrideDetail.testData=overrideDetail/changeIds.csv
overrideDetail.generator.db=cdpoverride.request_info
overrideDetail.generator.headers=changeId,overrideType,guestId,status,createdDate
overrideDetail.generator.query=\
  SELECT c.id as "changeId", c.changeRequestType as "overrideType", c.customerId as "guestId", c.status as "status", c.created as "createdDate" FROM request_info c

rankedData.threads=10
rankedData.iterations=100
rankedData.rampUpSec=10
rankedData.clientId=customer_data_product_services
rankedData.clientSecret=ref:CUSTOMER_DATA_PRODUCT_SERVICES_SECRET
rankedData.testData=rankedData/guestIds.csv
rankedData.generator.db=cdp-survivorship-outbound.account_info_ranked
rankedData.generator.headers=guestId,hasName,hasAddress,hasPhone,hasEmail,hasBirthDate
rankedData.generator.query=\
  SELECT c.guest_id AS "guestId" FROM account_info_ranked c WHERE c.guest_id != null OFFSET {offset} LIMIT 10000
rankedData.generator.db2=cdp-survivorship-outbound.account_info_ranked
rankedData.generator.query2=\
    SELECT * FROM ( \
        SELECT \
            c.guest_id AS "guestId", \
            sum(c.name.sum_gf_name            = 0 ? 1 : 0) > 0 AS "hasName", \
            sum(c.address.sum_gf_address      = 0 ? 1 : 0) > 0 AS "hasAddress", \
            sum(c.phone.sum_gf_phone          = 0 ? 1 : 0) > 0 AS "hasPhone", \
            sum(c.email.sum_gf_email          = 0 ? 1 : 0) > 0 AS "hasEmail", \
            sum(c.birth_dt.greyflag_birthdate = null ? 1 : 0) > 0 AS "hasBirthDate" \
        FROM account_info_ranked c WHERE c.guest_id = {guestId} GROUP BY c.guest_id \
    )
